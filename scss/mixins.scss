@use "sass:map";
@use "variables";

@mixin breakpoint($point, $direction: "up") {
  $value: map-get(variables.$breakpoints, "#{$point}-#{$direction}");
  
  @if $direction == "up" {
    @media (min-width: $value) {
      @content;
    }
  } @else if $direction == "down" {
    @media (max-width: $value) {
      @content;
    }
  } @else if $direction == "only" {
    $min: map-get(variables.$breakpoints, "#{$point}-up");
    $max: map-get(variables.$breakpoints, "#{$point}-down");
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  }
}

@mixin mobile-only {
  @media (max-width: map-get(variables.$breakpoints, "mobile-only")) {
    @content;
  }
}

@mixin tablet-portrait-up {
  @include breakpoint("tablet-portrait", "up") {
    @content;
  }
}

@mixin desktop-down {
  @include breakpoint("desktop", "down") {
    @content;
  }
}

@mixin tablet-portrait-only {
  @media (min-width: map-get(variables.$breakpoints, "tablet-portrait-up")) and (max-width: map-get(variables.$breakpoints, "tablet-portrait-down")) {
    @content;
  }
}
@mixin tablet-landscape-up {
  @media (min-width: map-get(variables.$breakpoints, "tablet-landscape-up")) {
    @content;
  }
}
@mixin tablet-landscape-only {
  @media (min-width: map-get(variables.$breakpoints, "tablet-landscape-up")) and (max-width: map-get(variables.$breakpoints, "tablet-landscape-down")) {
    @content;
  }
}
@mixin desktop-up {
  @media (min-width: map-get(variables.$breakpoints, "desktop-up")) {
    @content;
  }
}
@mixin desktop-only {
  @media (min-width: map-get(variables.$breakpoints, "desktop-up")) and (max-width: map-get(variables.$breakpoints, "desktop-down")) {
    @content;
  }
}
@mixin big-desktop-up {
  @media (min-width: map-get(variables.$breakpoints, "big-desktop-up")) {
    @content;
  }
}

@mixin retina {
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    @content;
  }
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}